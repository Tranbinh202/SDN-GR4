import React, { useState, useEffect } from "react";
import axios from "axios";
import { Spinner, Alert } from "react-bootstrap";
import { useNavigate } from "react-router-dom";
import "./ListProduct.css"; // D√πng chung CSS v·ªõi ListProduct

const API_BASE_URL = "http://localhost:9999/api";

const Favorites = () => {
  const [favorites, setFavorites] = useState([]);
  const [categories, setCategories] = useState([]); // üü¢ L∆∞u danh m·ª•c ƒë·ªÉ t√¨m brand name
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const navigate = useNavigate();
  const token = localStorage.getItem("authToken") || "";

  useEffect(() => {
    const fetchFavorites = async () => {
      try {
        const response = await axios.get(`${API_BASE_URL}/favorites`, {
          headers: { Authorization: `Bearer ${token}` },
        });

        console.log("D·ªØ li·ªáu y√™u th√≠ch:", response.data.favorites);
        setFavorites(response.data.favorites);
      } catch (err) {
        setError("L·ªói khi t·∫£i danh s√°ch y√™u th√≠ch!");
      }
    };

    const fetchCategories = async () => {
      try {
        const response = await axios.get(`${API_BASE_URL}/categories`);
        setCategories(response.data);
      } catch (err) {
        console.error("L·ªói khi t·∫£i danh m·ª•c:", err);
      }
    };

    if (token) {
      Promise.all([fetchFavorites(), fetchCategories()])
        .then(() => setLoading(false))
        .catch(() => setLoading(false));
    } else {
      setError("B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ xem danh s√°ch y√™u th√≠ch!");
      setLoading(false);
    }
  }, [token]);

  // üü¢ H√†m t√¨m t√™n th∆∞∆°ng hi·ªáu t·ª´ `sub_categories`
  const getBrandName = (brandId) => {
    for (const category of categories) {
      const subCategory = category.sub_categories.find(sub => sub._id === brandId);
      if (subCategory) return subCategory.name;
    }
    return "Kh√¥ng x√°c ƒë·ªãnh";
  };

  const removeFavorite = async (productId, productName) => {
    if (window.confirm(`B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a "${productName}" kh·ªèi danh s√°ch y√™u th√≠ch?`)) {
      try {
        await axios.post(
          `${API_BASE_URL}/favorites/remove`,
          { productId },
          {
            headers: { Authorization: `Bearer ${token}` },
          }
        );

        setFavorites(favorites.filter((product) => product._id !== productId));
        window.alert(`ƒê√£ x√≥a "${productName}" kh·ªèi danh s√°ch y√™u th√≠ch!`);
      } catch (error) {
        console.error("L·ªói khi x√≥a s·∫£n ph·∫©m kh·ªèi danh s√°ch y√™u th√≠ch:", error);
        window.alert("C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i sau!");
      }
    }
  };

  if (loading)
    return <Spinner animation="border" className="d-block mx-auto mt-5" />;
  if (error)
    return (
      <Alert variant="danger" className="text-center">
        {error}
      </Alert>
    );

  return (
    <div className="list-product-container">
      <h2 className="list-product-title">Danh s√°ch y√™u th√≠ch</h2>
      <div className="product-grid">
        {favorites.map((product) => (
          <div
            key={product._id}
            className="product-card"
            onClick={() => navigate(`/product/${product._id}`)}
            style={{ cursor: "pointer" }}
          >
            <img src={product.images?.[0]} alt={product.name} className="product-image" />

            {/* Hi·ªÉn th·ªã th√¥ng tin s·∫£n ph·∫©m */}
            <div className="product-info">
              <h3>{product.name}</h3>
              <p><strong>Th∆∞∆°ng hi·ªáu:</strong> {getBrandName(product.brand)}</p>
              <p><strong>M√†u s·∫Øc:</strong> {product.colors?.join(", ")}</p>
              <p><strong>Gi√° t·ª´:</strong> {new Intl.NumberFormat().format(product.variants?.[0]?.price || 0)} VND</p>
            </div>

            {/* N√∫t x√≥a s·∫£n ph·∫©m kh·ªèi danh s√°ch y√™u th√≠ch */}
            <div className="favorite-actions">
              <button
                className="btn btn-danger"
                onClick={(e) => {
                  e.stopPropagation();
                  removeFavorite(product._id, product.name);
                }}
              >
                X√≥a kh·ªèi y√™u th√≠ch
              </button>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default Favorites;
